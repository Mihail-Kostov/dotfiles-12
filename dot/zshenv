# zsh options {{{

# ensure proper zsh functions are loaded
fpath=(/usr/local/share/zsh/5.2-dev-1/functions $fpath)

# defining word endings
WORDCHARS='*?_-.[]~=&;!#$%^(){}<>'

# history config options
HISTFILE=$HOME/.zsh_history
HISTSIZE=20000
SAVEHIST=20000

setopt append_history
setopt extended_history
setopt share_history
setopt hist_verify

# I actually want to profile my command usage
# setopt hist_ignore_all_dups

# I do not care if I entered a command with a leading space
# I want it to be stored
# setopt hist_ignore_space

# dir navigation options
setopt auto_pushd
setopt pushd_ignore_dups
setopt pushd_silent
setopt auto_cd

# glob options
setopt extended_glob # allows us to use ^ to negate globs
unsetopt nomatch # but when pattern matching fails, simply use the command as is. See robbyrussell/oh-my-zsh#449

##### completions

# explaining the compinit -u hack:
  # the compinit -u hack is called for because I run the shell as a docker image
  # and mount the dotfiles repo as a volume. Compinit gets angry at me because
  # when docker mounts the volume, the permissions are wrong.
  # So when you run `exec zsh`, for exemple, compinit gets angry at you by saying:
  # "zsh compinit: insecure directories and files, run compaudit for list."
  # The -u flag tells compinit to be silent about that.
  # more info here: http://stackoverflow.com/a/19601821/4921402
# comp bootstrap
autoload -Uz compinit && compinit -u
zstyle ':completion:*' menu select

# better completion
setopt menu_complete

# case insensitive completion
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'

### fuzzy completion
# lifted from http://superuser.com/a/815317/555734
# 0 -- vanilla completion (abc => abc)
# 1 -- smart case completion (abc => Abc)
# 2 -- word flex completion (abc => A-big-Car)
# 3 -- full flex completion (abc => ABraCadabra)
zstyle ':completion:*' matcher-list '' \
  'm:{a-z\-}={A-Z\_}' \
  'r:[^[:alpha:]]||[[:alpha:]]=** r:|=* m:{a-z\-}={A-Z\_}' \
  'r:[[:ascii:]]||[[:ascii:]]=** r:|=* m:{a-z\-}={A-Z\_}'

# }}}
# terminal colors {{{

TC='\e['
Rst="${TC}0m"     # Reset all coloring and style
Black="${TC}30m";
Red="${TC}31m";
Green="${TC}32m";
Yellow="${TC}33m";
Blue="${TC}34m";
Purple="${TC}35m";
Cyan="${TC}36m";
White="${TC}37m";

# }}}
# path {{{

PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"

GNUBIN_PATH=/usr/local/opt/coreutils/libexec/gnubin
PATH="$GNUBIN_PATH:$PATH"

GOPATH=~/code/apps/go
export GOPATH
PATH="$GOPATH/bin:$PATH"

FZFBIN=~/.fzf/bin
PATH="$FZFBIN:$PATH"

export PATH

GNUMANPATH="/usr/local/opt/coreutils/libexec/gnuman"
MANPATH="$GNUMANPATH:$MANPATH"

FZFMAN=~/.fzf/man
MANPATH="$FZFMAN:$MANPATH"

export MANPATH

# }}}
# exports {{{

# standard configs
export LANG=en_US.UTF-8
export TERM=xterm-256color

if [[ -z ${EMACS+x} ]]; then
  export EDITOR="nvim"
else
  export EDITOR="emacsclient"
fi

# zplug config
export ZPLUG_CLONE_DEPTH=1

# ENHANCD customizations
export ENHANCD_COMMAND=ecd
export ENHANCD_FILTER=fzf-tmux

# FZF customizations
export FZF_DEFAULT_COMMAND='ag --hidden --path-to-agignore=~/.agignore -g ""'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="find . -path '*/.git' -prune -o -type d -print"

# emacs
export EMACS_SRC_DIR="~/code/apps/emacs"

# }}}
# load user config {{{

SHELL_USER_CONFIG_FILE="$(readlink -f ~)/.options/shell-options.conf"
if [[ -e "$SHELL_USER_CONFIG_FILE" ]]; then
  . "$SHELL_USER_CONFIG_FILE"
fi

# }}}
